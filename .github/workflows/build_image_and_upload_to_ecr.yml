name: Dockerizing to Amazon ECR

on:
  push:       # 트리거
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}        # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}         # set this to your Amazon ECR repository name

  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
  LANGCHAIN_TRACING_V2: ${{ secrets.LANGCHAIN_TRACING_V2 }}
  LANGCHAIN_ENDPOINT: ${{ secrets.LANGCHAIN_ENDPOINT }}
  LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
  LANGCHAIN_PROJECT: ${{ secrets.LANGCHAIN_PROJECT }}

jobs:
  build:
    name: Build Image and Upload to ECR
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create .env file
        run: |
          echo "OPENAI_API_KEY=${OPENAI_API_KEY}" >> .env
          echo "PINECONE_API_KEY=${PINECONE_API_KEY}" >> .env
          echo "LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2}" >> .env
          echo "LANGCHAIN_ENDPOINT=${LANGCHAIN_ENDPOINT}" >> .env
          echo "LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}" >> .env
          echo "LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT}" >> .env

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: prod

        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"